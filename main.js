(()=>{"use strict";class e{constructor(e,t,s){this.dead=e,this.lost=t,this.gameField=s,this.holesNumber=16,this.activeHole=null,this.currentScore=0,this.losingScore=5}activateHole(){if(this.lost.textContent<this.losingScore){const e=Math.floor(1+Math.random()*this.holesNumber);this.activeHole=this.gameField.querySelector(`#hole${e}`),this.activeHole.className="hole hole_has-mole",this.currentScore=+this.dead.textContent}else this.dead.textContent=0,this.lost.textContent=0,alert("Вы проиграли")}deactivateHole(){this.activeHole.className="hole",this.currentScore===+this.dead.textContent&&(this.lost.textContent=+this.lost.textContent+1)}}const t=document.body.querySelector("#status"),s=t.querySelector("#dead"),o=t.querySelector("#lost"),l=document.body.querySelector("#game-field"),i=new class{constructor(e,t){this.dead=e,this.gameField=t}assign(){for(const e of this.gameField.querySelectorAll(".hole"))e.onclick=()=>{!e.className.includes("disabled")&&e.className.includes("hole_has-mole")&&(e.classList.add("disabled"),this.dead.textContent=+this.dead.textContent+1)};this.gameField.addEventListener("pointerover",(e=>{const{target:t}=e,s=e.currentTarget;t.className.includes("hole hole_has-mole")?s.classList.add("hammer"):s.classList.remove("hammer")}))}}(s,l),a=new class extends e{run(){setTimeout((()=>{this.activateHole()}),2e3),setInterval((()=>{setTimeout((()=>{this.deactivateHole()}),1e3),setTimeout((()=>{this.activateHole()}),1500)}),2500)}}(s,o,l);i.assign(),a.run()})();